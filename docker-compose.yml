version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "19006:19006"
    environment:
      - NODE_ENV=production
      - API_URL=http://localhost:4000
      - EXPO_PUBLIC_API_URL=http://localhost:4000
    depends_on:
      - api
    networks:
      - afg-marketplace
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/afg_marketplace
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - JWT_EXPIRE=${JWT_EXPIRE:-30d}
      - PORT=4000
      - CORS_ORIGIN=http://localhost:19006
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@afghanmarketplace.com}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - UPLOAD_MAX_SIZE=${UPLOAD_MAX_SIZE:-10485760}
      - UPLOAD_ALLOWED_TYPES=${UPLOAD_ALLOWED_TYPES:-image/jpeg,image/png,image/gif,image/webp}
    volumes:
      - api_uploads:/app/uploads
      - api_logs:/app/logs
    depends_on:
      - mongo
      - redis
    networks:
      - afg-marketplace
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=afg_marketplace
    networks:
      - afg-marketplace
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - afg-marketplace
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
      - api
    networks:
      - afg-marketplace
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:
  api_uploads:
  api_logs:

networks:
  afg-marketplace:
    driver: bridge